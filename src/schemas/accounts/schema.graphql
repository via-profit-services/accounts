extend type Query {
  accounts: AccountsQuery!
}

extend type Mutation {
  accounts: AccountsMutation!
}

extend type Subscription {

  """
  Called when the account with following id was updated
  """
  accountWasUpdated (id: ID!): Account!

  """
  Called when the any account was deleted
  """
  accountWasDeleted: [ID!]!
}

enum AccountStatus {
  allowed
  forbidden
}

enum AccountOrderField {
  name
  login
  createdAt
  updatedAt
}



"""
Account edge bundle
"""
type AccountsEdge implements Edge {
  node: Account!
  cursor: String!
}

"""
Accounts module queries
"""
type AccountsQuery {

  """
  Returns Accounts list bundle
  """
  list(
    first: Int
    offset: Int
    after: String
    orderBy: [AccountOrderBy]
    filter: AccountListFilter
    search: AccountFilterSearch
  ): AccountListConnection!

  """
  Returns Account statuses list
  """
  statusesList: [AccountStatus!]!
  rolesList: [String!]!

  """
  Returns Your account data
  """
  me: Account!


  """
  Returns account by ID
  """
  account(id: ID!): Account

  checkLoginExists(
    login: String
    skipId: ID!
  ): Boolean!
}


"""
Possible data to filter list of accounts
"""
input AccountListFilter {
  status: [AccountStatus!]
}



"""
Account search filter
"""
input AccountFilterSearch {

  fields: [AccountFilterSearchField!]!

  """
  Search query string
  """
  query: String!
}

"""
Possible fields to search accounts
"""
enum AccountFilterSearchField {
  name
}




type AccountsMutation {
  
  """
  Update existings account
  """
  update(
    id: ID!
    input: InputAccountUpdateData!
  ): Account!

  """
  Create new Account
  """
  create(
    input: InputAccountCreateData!
  ): Account!

  """
  Delete account
  """
  delete(
    id: ID!
  ): Boolean!


}




"""
Ordering options for accounts returned from the connection
"""
input AccountOrderBy {
  field: AccountOrderField!
  direction: OrderDirection!
}


"""
Account data
"""
type Account implements Node {
  id: ID!
  avatar(transform: ImageTransformInput): File
  files: [File!]
  name: String!
  login: String!
  password: String!
  status: AccountStatus!
  createdAt: DateTime!
  updatedAt: DateTime!
  roles: [String!]!
}



"""
Possible data to driver update
"""
input InputAccountUpdateData {
  id: String
  name: String
  login: String
  password: String
  status: AccountStatus
  roles: [String!]
}

"""
Possible data to create new account
"""
input InputAccountCreateData {
  id: String
  name: String!
  login: String!
  password: String!
  roles: [String!]!
}



"""
Accounts list bundle
"""
type AccountListConnection implements Connection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [AccountsEdge]!
}
